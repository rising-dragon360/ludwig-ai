{
    "docstring": "Implements Adamax algorithm (a variant of Adam based on infinity norm).\n\n.. math::\n   \\begin{aligned}\n        &\\rule{110mm}{0.4pt}                                                                 \\\\\n        &\\textbf{input}      : \\gamma \\text{ (lr)}, \\beta_1, \\beta_2\n            \\text{ (betas)},\\theta_0 \\text{ (params)},f(\\theta) \\text{ (objective)},\n            \\: \\lambda \\text{ (weight decay)},                                                \\\\\n        &\\hspace{13mm}    \\epsilon \\text{ (epsilon)}                                          \\\\\n        &\\textbf{initialize} :  m_0 \\leftarrow 0 \\text{ ( first moment)},\n            u_0 \\leftarrow 0 \\text{ ( infinity norm)}                                 \\\\[-1.ex]\n        &\\rule{110mm}{0.4pt}                                                                 \\\\\n        &\\textbf{for} \\: t=1 \\: \\textbf{to} \\: \\ldots \\: \\textbf{do}                         \\\\\n        &\\hspace{5mm}g_t           \\leftarrow   \\nabla_{\\theta} f_t (\\theta_{t-1})           \\\\\n        &\\hspace{5mm}if \\: \\lambda \\neq 0                                                    \\\\\n        &\\hspace{10mm} g_t \\leftarrow g_t + \\lambda  \\theta_{t-1}                            \\\\\n        &\\hspace{5mm}m_t      \\leftarrow   \\beta_1 m_{t-1} + (1 - \\beta_1) g_t               \\\\\n        &\\hspace{5mm}u_t      \\leftarrow   \\mathrm{max}(\\beta_2 u_{t-1}, |g_{t}|+\\epsilon)   \\\\\n        &\\hspace{5mm}\\theta_t \\leftarrow \\theta_{t-1} - \\frac{\\gamma m_t}{(1-\\beta^t_1) u_t} \\\\\n        &\\rule{110mm}{0.4pt}                                                          \\\\[-1.ex]\n        &\\bf{return} \\:  \\theta_t                                                     \\\\[-1.ex]\n        &\\rule{110mm}{0.4pt}                                                          \\\\[-1.ex]\n   \\end{aligned}\n\nFor further details regarding the algorithm we refer to `Adam: A Method for Stochastic Optimization`_.\n\nArgs:\n    params (iterable): iterable of parameters to optimize or dicts defining\n        parameter groups\n    lr (float, optional): learning rate (default: 2e-3)\n    betas (Tuple[float, float], optional): coefficients used for computing\n        running averages of gradient and its square\n    eps (float, optional): term added to the denominator to improve\n        numerical stability (default: 1e-8)\n    weight_decay (float, optional): weight decay (L2 penalty) (default: 0)\n\n.. _Adam\\: A Method for Stochastic Optimization:\n    https://arxiv.org/abs/1412.6980",
    "docstring_sections": [
        {
            "type": "parameters",
            "value": [
                {
                    "annotation": "iterable",
                    "default": "",
                    "description": "iterable of parameters to optimize or dicts defining\nparameter groups",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": false,
                    "is_required": true,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "params"
                },
                {
                    "annotation": "float",
                    "default": "0.002",
                    "description": "learning rate (default: 2e-3)",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "lr"
                },
                {
                    "annotation": "Tuple[float, float]",
                    "default": "(0.9, 0.999)",
                    "description": "coefficients used for computing\nrunning averages of gradient and its square",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "betas"
                },
                {
                    "annotation": "float",
                    "default": "1e-08",
                    "description": "term added to the denominator to improve\nnumerical stability (default: 1e-8)",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "eps"
                },
                {
                    "annotation": "float",
                    "default": "0",
                    "description": "weight decay (L2 penalty) (default: 0)",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "weight_decay"
                }
            ]
        }
    ],
    "name": "Adamax",
    "path": "torch.optim.adamax.Adamax"
}
