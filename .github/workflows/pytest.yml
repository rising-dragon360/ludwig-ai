# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pytest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.6, 3.7, 3.8 ]
        test-markers: [ "not distributed", "distributed" ]
        include:
          - python-version: 3.6
            tensorflow-version: 2.3.1
          - python-version: 3.7
            tensorflow-version: 2.4.0
          - python-version: 3.8
            tensorflow-version: nightly
    env:
      TENSORFLOW: ${{ matrix.tensorflow-version }}
      MARKERS: ${{ matrix.test-markers }}

    name: py${{ matrix.python-version  }}, tf${{ matrix.tensorflow-version }}, ${{ matrix.test-markers }}, ${{ matrix.os }}

    timeout-minutes: 50
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Linux
      if: runner.os == 'linux'
      run: |
        sudo apt-get install -y cmake libsndfile1

    - name: Setup macOS
      if: runner.os == 'macOS'
      run: |
        brew install libuv

    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-tf${{ matrix.tensorflow-version }}-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-py${{ matrix.python-version }}-tf${{ matrix.tensorflow-version }}-

    - name: Install dependencies
      env:
        HOROVOD_WITH_TENSORFLOW: 1
        HOROVOD_WITHOUT_MPI: 1
        HOROVOD_WITHOUT_PYTORCH: 1
        HOROVOD_WITHOUT_MXNET: 1
      run: |
        python --version
        pip --version
        python -m pip install -U pip
        if [ $TENSORFLOW == "nightly" ]; then
          cat requirements.txt | sed '/^tensorflow[>=<]/d' > requirements-temp && mv requirements-temp requirements.txt
          cat requirements_horovod.txt | sed 's/\[tensorflow\]//g' > requirements-temp && mv requirements-temp requirements_horovod.txt
          pip install tf-nightly
          pip install --no-cache-dir git+https://github.com/horovod/horovod.git@master
        else
          pip install tensorflow==$TENSORFLOW
        fi
        pip install --no-build-isolation --no-use-pep517 ConfigSpace # temporary fix: https://github.com/automl/ConfigSpace/issues/173
        pip install '.[test]'
        pip list
      shell: bash

    - name: Reinstall Horovod if necessary
      env:
        HOROVOD_WITH_TENSORFLOW: 1
        HOROVOD_WITHOUT_MPI: 1
        HOROVOD_WITHOUT_PYTORCH: 1
        HOROVOD_WITHOUT_MXNET: 1
      run: |
        HOROVOD_BUILT=$(python -c "import horovod.tensorflow; horovod.tensorflow.nccl_built(); print('SUCCESS')" || true)
        if [[ $HOROVOD_BUILT != "SUCCESS" ]]; then
          pip uninstall -y horovod
          pip install --no-cache-dir git+https://github.com/horovod/horovod.git@master
        fi
        horovodrun --check-build
      shell: bash

    - name: Tests
      run: |
        pytest -v --timeout 300 --durations 10 -m "$MARKERS" tests
