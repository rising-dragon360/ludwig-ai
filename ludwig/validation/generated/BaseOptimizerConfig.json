{
    "attributes": [
        "ludwig.modules.optimization_modules.BaseOptimizerConfig.optimizer_class",
        "ludwig.modules.optimization_modules.BaseOptimizerConfig.type"
    ],
    "bases": [
        "ludwig.validation.marshmallow_utils.BaseMarshmallowConfig",
        "abc.ABC"
    ],
    "children": {
        "ludwig.modules.optimization_modules.BaseOptimizerConfig.__init__": {
            "docstring": null,
            "name": "__init__",
            "path": "ludwig.modules.optimization_modules.BaseOptimizerConfig.__init__",
            "relative_file_path": "ludwig/modules/optimization_modules.py",
            "signature": {
                "parameters": [
                    {
                        "kind": "POSITIONAL_OR_KEYWORD",
                        "name": "self"
                    },
                    {
                        "annotation": "str",
                        "kind": "POSITIONAL_OR_KEYWORD",
                        "name": "type"
                    }
                ],
                "return_annotation": "None"
            }
        },
        "ludwig.modules.optimization_modules.BaseOptimizerConfig.optimizer_class": {
            "docstring": "Class variable pointing to the corresponding `torch.optim.Optimizer` class.",
            "name": "optimizer_class",
            "path": "ludwig.modules.optimization_modules.BaseOptimizerConfig.optimizer_class",
            "relative_file_path": "ludwig/modules/optimization_modules.py",
            "type": "ClassVar[Optional[torch.optim.optimizer.Optimizer]]"
        },
        "ludwig.modules.optimization_modules.BaseOptimizerConfig.type": {
            "docstring": "Name corresponding to an optimizer `ludwig.modules.optimization_modules.optimizer_registry`.\nTechnically mutable, but attempting to load a derived optimizer with `type` set to a mismatched value will\nresult in a `ValidationError`.",
            "name": "type",
            "path": "ludwig.modules.optimization_modules.BaseOptimizerConfig.type",
            "relative_file_path": "ludwig/modules/optimization_modules.py",
            "type": "str"
        }
    },
    "docstring": "Base class for optimizers. Not meant to be used directly.\n\nThe dataclass format prevents arbitrary properties from being set. Consequently, in child classes, all properties\nfrom the corresponding `torch.optim.Optimizer` class are copied over: check each class to check which attributes are\ndifferent from the torch-specified defaults.",
    "name": "BaseOptimizerConfig",
    "path": "ludwig.modules.optimization_modules.BaseOptimizerConfig"
}
