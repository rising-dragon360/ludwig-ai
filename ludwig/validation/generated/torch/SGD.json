{
    "docstring": "Implements stochastic gradient descent (optionally with momentum).\n\n.. math::\n   \\begin{aligned}\n        &\\rule{110mm}{0.4pt}                                                                 \\\\\n        &\\textbf{input}      : \\gamma \\text{ (lr)}, \\: \\theta_0 \\text{ (params)}, \\: f(\\theta)\n            \\text{ (objective)}, \\: \\lambda \\text{ (weight decay)},                          \\\\\n        &\\hspace{13mm} \\:\\mu \\text{ (momentum)}, \\:\\tau \\text{ (dampening)},\\:nesterov\\\\[-1.ex]\n        &\\rule{110mm}{0.4pt}                                                                 \\\\\n        &\\textbf{for} \\: t=1 \\: \\textbf{to} \\: \\ldots \\: \\textbf{do}                         \\\\\n        &\\hspace{5mm}g_t           \\leftarrow   \\nabla_{\\theta} f_t (\\theta_{t-1})           \\\\\n        &\\hspace{5mm}\\textbf{if} \\: \\lambda \\neq 0                                           \\\\\n        &\\hspace{10mm} g_t \\leftarrow g_t + \\lambda  \\theta_{t-1}                            \\\\\n        &\\hspace{5mm}\\textbf{if} \\: \\mu \\neq 0                                               \\\\\n        &\\hspace{10mm}\\textbf{if} \\: t > 1                                                   \\\\\n        &\\hspace{15mm} \\textbf{b}_t \\leftarrow \\mu \\textbf{b}_{t-1} + (1-\\tau) g_t           \\\\\n        &\\hspace{10mm}\\textbf{else}                                                          \\\\\n        &\\hspace{15mm} \\textbf{b}_t \\leftarrow g_t                                           \\\\\n        &\\hspace{10mm}\\textbf{if} \\: nesterov                                                \\\\\n        &\\hspace{15mm} g_t \\leftarrow g_{t-1} + \\mu \\textbf{b}_t                             \\\\\n        &\\hspace{10mm}\\textbf{else}                                                   \\\\[-1.ex]\n        &\\hspace{15mm} g_t  \\leftarrow  \\textbf{b}_t                                         \\\\\n        &\\hspace{5mm}\\theta_t \\leftarrow \\theta_{t-1} - \\gamma g_t                    \\\\[-1.ex]\n        &\\rule{110mm}{0.4pt}                                                          \\\\[-1.ex]\n        &\\bf{return} \\:  \\theta_t                                                     \\\\[-1.ex]\n        &\\rule{110mm}{0.4pt}                                                          \\\\[-1.ex]\n   \\end{aligned}\n\nNesterov momentum is based on the formula from\n`On the importance of initialization and momentum in deep learning`__.\n\nArgs:\n    params (iterable): iterable of parameters to optimize or dicts defining\n        parameter groups\n    lr (float): learning rate\n    momentum (float, optional): momentum factor (default: 0)\n    weight_decay (float, optional): weight decay (L2 penalty) (default: 0)\n    dampening (float, optional): dampening for momentum (default: 0)\n    nesterov (bool, optional): enables Nesterov momentum (default: False)\n\nExample:\n    >>> optimizer = torch.optim.SGD(model.parameters(), lr=0.1, momentum=0.9)\n    >>> optimizer.zero_grad()\n    >>> loss_fn(model(input), target).backward()\n    >>> optimizer.step()\n\n__ http://www.cs.toronto.edu/%7Ehinton/absps/momentum.pdf\n\n.. note::\n    The implementation of SGD with Momentum/Nesterov subtly differs from\n    Sutskever et. al. and implementations in some other frameworks.\n\n    Considering the specific case of Momentum, the update can be written as\n\n    .. math::\n        \\begin{aligned}\n            v_{t+1} & = \\mu * v_{t} + g_{t+1}, \\\\\n            p_{t+1} & = p_{t} - \\text{lr} * v_{t+1},\n        \\end{aligned}\n\n    where :math:`p`, :math:`g`, :math:`v` and :math:`\\mu` denote the\n    parameters, gradient, velocity, and momentum respectively.\n\n    This is in contrast to Sutskever et. al. and\n    other frameworks which employ an update of the form\n\n    .. math::\n        \\begin{aligned}\n            v_{t+1} & = \\mu * v_{t} + \\text{lr} * g_{t+1}, \\\\\n            p_{t+1} & = p_{t} - v_{t+1}.\n        \\end{aligned}\n\n    The Nesterov version is analogously modified.",
    "docstring_sections": [
        {
            "type": "parameters",
            "value": [
                {
                    "annotation": "iterable",
                    "default": "",
                    "description": "iterable of parameters to optimize or dicts defining\nparameter groups",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": false,
                    "is_required": true,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "params"
                },
                {
                    "annotation": "float",
                    "default": "<required parameter>",
                    "description": "learning rate",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "lr"
                },
                {
                    "annotation": "float",
                    "default": "0",
                    "description": "momentum factor (default: 0)",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "momentum"
                },
                {
                    "annotation": "float",
                    "default": "0",
                    "description": "weight decay (L2 penalty) (default: 0)",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "weight_decay"
                },
                {
                    "annotation": "float",
                    "default": "0",
                    "description": "dampening for momentum (default: 0)",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "dampening"
                },
                {
                    "annotation": "bool",
                    "default": "False",
                    "description": "enables Nesterov momentum (default: False)",
                    "is_args": false,
                    "is_kwargs": false,
                    "is_optional": true,
                    "is_required": false,
                    "kind": "POSITIONAL_OR_KEYWORD",
                    "name": "nesterov"
                }
            ]
        }
    ],
    "name": "SGD",
    "path": "torch.optim.sgd.SGD"
}
